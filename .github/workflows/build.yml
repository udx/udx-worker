name: Build

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        if: github.ref != 'refs/heads/latest'
        run: docker build .

      - name: Authenticate to Google Cloud
        id: google_auth
        # if: github.ref == 'refs/heads/latest'
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ vars.GCP_AUTH_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

      - name: Login to Google Artifact Registry
        # if: github.ref == 'refs/heads/latest'
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev
          docker login -u oauth2accesstoken -p "${{ steps.google_auth.outputs.access_token }}" ${{ vars.GCP_REGION }}-docker.pkg.dev

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "3.1.x"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.5.0"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: ci/git-version.yml

      - name: Build and push images
        # if: github.ref == 'refs/heads/latest'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/${{ vars.GCP_REGISTRY_REPO }}:${{ steps.gitversion.outputs.semVer }}
            ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/${{ vars.GCP_REGISTRY_REPO }}:latest

      - name: Generate changelog
        # if: github.ref == 'refs/heads/latest'
        id: changelog
        run: |
          echo "::set-output name=changelog::$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s")"

      - name: Create GitHub release
        # if: github.ref == 'refs/heads/latest'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          release_name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            Release Notes:
            ${{ steps.changelog.outputs.changelog }}
