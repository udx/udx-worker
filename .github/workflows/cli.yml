name: Build and Release UDX Worker CLI

on:
  push:
    paths:
      - ".github/workflows/cli.yml"
      - "ci/**"
      - "cli/**"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      RELEASE_BRANCH_REF: refs/heads/latest
      CLI_CONTEXT: cli
      RELEASE_ASSET_NAME: udx-worker-latest.tgz
      CHANGELOG_ASSET_PATH: changelog.txt

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Run Tests
        run: |
          cd $CLI_CONTEXT
          npm install
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping tests."
          fi

      - name: Install GitVersion
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        uses: gittools/actions/gitversion/setup@v1
        with:
          versionSpec: "5.12.0"

      - name: Determine Version
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1
        with:
          useConfigFile: true
          configFilePath: ci/git-version.yml

      - name: Pack CLI
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        run: |
          cd $CLI_CONTEXT
          npm install --omit=dev
          npm pack --ignore-scripts

      - name: Clean up
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        run: |
          cd $CLI_CONTEXT
          rm -rf node_modules
          rm -rf package-lock.json

      - name: Upload CLI binary
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_ASSET_NAME }}
          path: |
            ${{ env.CLI_CONTEXT }}/
            !${{ env.CLI_CONTEXT }}/__tests__
            !${{ env.CLI_CONTEXT }}/*.tgz
            !${{ env.CLI_CONTEXT }}/*.cjs

      - name: Generate changelog
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        id: changelog
        run: |
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s" > ${{ env.CHANGELOG_ASSET_PATH }}

      - name: Install Octokit
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        run: npm install @octokit/rest

      - name: Create GitHub release and upload asset
        if: success() && github.ref == env.RELEASE_BRANCH_REF
        run: |
          node -e "
          const { createRelease, uploadReleaseAsset } = require('./ci/scripts/github');
          (async () => {
            const releaseId = await createRelease('${{ env.CHANGELOG_ASSET_PATH }}');
            await uploadReleaseAsset(releaseId, '${{ env.CLI_CONTEXT }}/', '${{ env.RELEASE_ASSET_NAME }}');
          })();"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          semVer: ${{ steps.gitversion.outputs.semVer }}
          GITHUB_REPOSITORY: udx/udx-worker
